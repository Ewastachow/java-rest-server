//group 'java-rest-server'
//version '1.0'

plugins {
    id 'nu.studer.jooq' version '2.0.2'
    id 'org.flywaydb.flyway' version '4.0.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'distribution'
apply plugin: 'groovy'
apply plugin: 'jacoco'

mainClassName = 'pl.edu.agh.kis.florist.controller.App'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jooq {
    version = '3.8.6' // the default (can be omitted)
    edition = 'OSS'   // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL

    sample(sourceSets.main) {
        jdbc {
            driver = 'org.sqlite.JDBC'//'org.postgresql.Driver'
            url = 'jdbc:sqlite:test.db'
            //user = 'some_user'
            ///password = 'secret'
            //schema = 'public'
            //properties {
            //    property {
            //        key = 'ssl'
            //        value = 'true'
            //    }
            //}
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.util.sqlite.SQLiteDatabase'
                //inputSchema = 'public'
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                daos = true
            }
            target {
                packageName = 'pl.edu.agh.kis.florist.db'
                // directory = ...
            }
        }
    }
}

flyway {
    url = 'jdbc:sqlite:test.db'
}


dependencies {

    jooqRuntime group: 'org.xerial', name: 'sqlite-jdbc', version: '3.14.2.1'//'postgresql:postgresql:9.1-901.jdbc4'

    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.14.2.1'
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.jooq:jooq'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile 'com.sparkjava:spark-core:2.5.4'

    // Use the awesome Spock testing and specification framework even with Java
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.1'
}

tasks.findAll { task -> task.name.startsWith('generate') }
        .each {
    it.dependsOn flywayMigrate
    it.inputs.file( "test.db")
}

task generateAllJooqSchemaSource << {}

generateAllJooqSchemaSource.dependsOn {
    tasks.findAll { task -> task.name.matches('generate\\w+JooqSchemaSource') && task.name != 'generateAllJooqSchemaSource' }
}


eclipseClasspath.dependsOn generateAllJooqSchemaSource
ideaModule.dependsOn generateAllJooqSchemaSource
compileJava.dependsOn generateAllJooqSchemaSource

clean.dependsOn flywayClean
